[tool.poetry]
name = "sep-groupb"
version = "0.1.0"
readme = "README.md"
authors = [
    "Malik Durmus <malikdurmus2@gmail.com>",
    "Tobias Huber",
    "Aleksandar Mijatovic",
    "Thang Long Nguyen",
    "Martin Plank"

]
description = "Reinforcement Learning from Human Feedback Framework"
packages = [
    { include = "app"},
    { include = "rlhf"}
]


[tool.poetry.dependencies]
python = ">=3.8,<3.11"
tensorboard = "^2.10.0"
wandb = "^0.13.11"
torch = ">=1.12.1"
# Replace to download cuda instead

#You have to use torch 2.1.0 for slurm computers, since they are equipped with python3.8 and last torch version that supports 3.8 is 2.1.0
#torch = { url = "https://download.pytorch.org/whl/cu124/torch-2.5.1%2Bcu124-cp310-cp310-win_amd64.whl" }
gymnasium = {extras = ["mujoco"], version = "^1.0.0"}

moviepy = "1.0.3"
pygame = "2.1.0"
rich = "<12.0"
tenacity = "^8.2.2"
tyro = "^0.5.10"
numpy = ">=1.24.0"
flask = ">=2.0.0,<3.0.0"
flask-cors = "^5.0.0"
imageio-ffmpeg = "^0.5.1"
tqdm = "^4.67.1"
stable-baselines = "^2.10.2"
stable-baselines3 = ">=2.4.0"

ale-py = { version = "0.8.1", optional = true }
AutoROM = { extras = ["accept-rom-license"], version = "~0.4.2", optional = true }
opencv-python = { version = "^4.6.0.66", optional = true }
pytest = { version = "^7.1.3", optional = true }
openrlbenchmark = { version = "^0.1.1b4", optional = true }
jax = { version = "0.4.8", optional = true }
jaxlib = { version = "0.4.7", optional = true }
flax = { version = "0.6.8", optional = true }
optuna = { version = "^3.0.1", optional = true }
optuna-dashboard = { version = "^0.7.2", optional = true }
multi-agent-ale-py = { version = "0.1.11", optional = true }
shimmy = { version = ">=1.1.0", optional = true }
dm-control = { version = ">=1.0.10", optional = true }
h5py = { version = ">=3.7.0", optional = true }
optax = { version = "0.1.4", optional = true }
chex = { version = "0.1.5", optional = true }



#pytest = { version = "^7.1.3", optional = true }
flask-socketio = "^5.5.0"
pyinstaller = "^6.11.1"


[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
mujoco = ["mujoco", "imageio"]
